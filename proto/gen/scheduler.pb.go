// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.1
// source: scheduler.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Restart policy for containers
type RestartPolicy int32

const (
	RestartPolicy_RESTART_POLICY_UNSPECIFIED    RestartPolicy = 0
	RestartPolicy_RESTART_POLICY_NO             RestartPolicy = 1
	RestartPolicy_RESTART_POLICY_ALWAYS         RestartPolicy = 2
	RestartPolicy_RESTART_POLICY_ON_FAILURE     RestartPolicy = 3
	RestartPolicy_RESTART_POLICY_UNLESS_STOPPED RestartPolicy = 4
)

// Enum value maps for RestartPolicy.
var (
	RestartPolicy_name = map[int32]string{
		0: "RESTART_POLICY_UNSPECIFIED",
		1: "RESTART_POLICY_NO",
		2: "RESTART_POLICY_ALWAYS",
		3: "RESTART_POLICY_ON_FAILURE",
		4: "RESTART_POLICY_UNLESS_STOPPED",
	}
	RestartPolicy_value = map[string]int32{
		"RESTART_POLICY_UNSPECIFIED":    0,
		"RESTART_POLICY_NO":             1,
		"RESTART_POLICY_ALWAYS":         2,
		"RESTART_POLICY_ON_FAILURE":     3,
		"RESTART_POLICY_UNLESS_STOPPED": 4,
	}
)

func (x RestartPolicy) Enum() *RestartPolicy {
	p := new(RestartPolicy)
	*p = x
	return p
}

func (x RestartPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RestartPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduler_proto_enumTypes[0].Descriptor()
}

func (RestartPolicy) Type() protoreflect.EnumType {
	return &file_scheduler_proto_enumTypes[0]
}

func (x RestartPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RestartPolicy.Descriptor instead.
func (RestartPolicy) EnumDescriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{0}
}

// Current status of an environment
type EnvironmentStatus int32

const (
	EnvironmentStatus_ENVIRONMENT_STATUS_UNSPECIFIED EnvironmentStatus = 0
	EnvironmentStatus_ENVIRONMENT_STATUS_PENDING     EnvironmentStatus = 1
	EnvironmentStatus_ENVIRONMENT_STATUS_CREATING    EnvironmentStatus = 2
	EnvironmentStatus_ENVIRONMENT_STATUS_RUNNING     EnvironmentStatus = 3
	EnvironmentStatus_ENVIRONMENT_STATUS_STOPPING    EnvironmentStatus = 4
	EnvironmentStatus_ENVIRONMENT_STATUS_STOPPED     EnvironmentStatus = 5
	EnvironmentStatus_ENVIRONMENT_STATUS_FAILED      EnvironmentStatus = 6
	EnvironmentStatus_ENVIRONMENT_STATUS_UPDATING    EnvironmentStatus = 7
)

// Enum value maps for EnvironmentStatus.
var (
	EnvironmentStatus_name = map[int32]string{
		0: "ENVIRONMENT_STATUS_UNSPECIFIED",
		1: "ENVIRONMENT_STATUS_PENDING",
		2: "ENVIRONMENT_STATUS_CREATING",
		3: "ENVIRONMENT_STATUS_RUNNING",
		4: "ENVIRONMENT_STATUS_STOPPING",
		5: "ENVIRONMENT_STATUS_STOPPED",
		6: "ENVIRONMENT_STATUS_FAILED",
		7: "ENVIRONMENT_STATUS_UPDATING",
	}
	EnvironmentStatus_value = map[string]int32{
		"ENVIRONMENT_STATUS_UNSPECIFIED": 0,
		"ENVIRONMENT_STATUS_PENDING":     1,
		"ENVIRONMENT_STATUS_CREATING":    2,
		"ENVIRONMENT_STATUS_RUNNING":     3,
		"ENVIRONMENT_STATUS_STOPPING":    4,
		"ENVIRONMENT_STATUS_STOPPED":     5,
		"ENVIRONMENT_STATUS_FAILED":      6,
		"ENVIRONMENT_STATUS_UPDATING":    7,
	}
)

func (x EnvironmentStatus) Enum() *EnvironmentStatus {
	p := new(EnvironmentStatus)
	*p = x
	return p
}

func (x EnvironmentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnvironmentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduler_proto_enumTypes[1].Descriptor()
}

func (EnvironmentStatus) Type() protoreflect.EnumType {
	return &file_scheduler_proto_enumTypes[1]
}

func (x EnvironmentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnvironmentStatus.Descriptor instead.
func (EnvironmentStatus) EnumDescriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{1}
}

// Current status of a container
type ContainerStatus int32

const (
	ContainerStatus_CONTAINER_STATUS_UNSPECIFIED ContainerStatus = 0
	ContainerStatus_CONTAINER_STATUS_PENDING     ContainerStatus = 1
	ContainerStatus_CONTAINER_STATUS_PULLING     ContainerStatus = 2
	ContainerStatus_CONTAINER_STATUS_RUNNING     ContainerStatus = 3
	ContainerStatus_CONTAINER_STATUS_STOPPING    ContainerStatus = 4
	ContainerStatus_CONTAINER_STATUS_STOPPED     ContainerStatus = 5
	ContainerStatus_CONTAINER_STATUS_FAILED      ContainerStatus = 6
	ContainerStatus_CONTAINER_STATUS_RESTARTING  ContainerStatus = 7
)

// Enum value maps for ContainerStatus.
var (
	ContainerStatus_name = map[int32]string{
		0: "CONTAINER_STATUS_UNSPECIFIED",
		1: "CONTAINER_STATUS_PENDING",
		2: "CONTAINER_STATUS_PULLING",
		3: "CONTAINER_STATUS_RUNNING",
		4: "CONTAINER_STATUS_STOPPING",
		5: "CONTAINER_STATUS_STOPPED",
		6: "CONTAINER_STATUS_FAILED",
		7: "CONTAINER_STATUS_RESTARTING",
	}
	ContainerStatus_value = map[string]int32{
		"CONTAINER_STATUS_UNSPECIFIED": 0,
		"CONTAINER_STATUS_PENDING":     1,
		"CONTAINER_STATUS_PULLING":     2,
		"CONTAINER_STATUS_RUNNING":     3,
		"CONTAINER_STATUS_STOPPING":    4,
		"CONTAINER_STATUS_STOPPED":     5,
		"CONTAINER_STATUS_FAILED":      6,
		"CONTAINER_STATUS_RESTARTING":  7,
	}
)

func (x ContainerStatus) Enum() *ContainerStatus {
	p := new(ContainerStatus)
	*p = x
	return p
}

func (x ContainerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduler_proto_enumTypes[2].Descriptor()
}

func (ContainerStatus) Type() protoreflect.EnumType {
	return &file_scheduler_proto_enumTypes[2]
}

func (x ContainerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerStatus.Descriptor instead.
func (ContainerStatus) EnumDescriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{2}
}

// Container configuration for individual services within an environment
type ContainerConfig struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Name                 string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image                string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Command              []string               `protobuf:"bytes,3,rep,name=command,proto3" json:"command,omitempty"`
	Args                 []string               `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	Ports                []*PortMapping         `protobuf:"bytes,5,rep,name=ports,proto3" json:"ports,omitempty"`
	Volumes              []*VolumeMount         `protobuf:"bytes,6,rep,name=volumes,proto3" json:"volumes,omitempty"`
	EnvironmentVariables map[string]string      `protobuf:"bytes,7,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Resources            *ResourceLimits        `protobuf:"bytes,8,opt,name=resources,proto3" json:"resources,omitempty"`
	HealthCheck          *HealthCheck           `protobuf:"bytes,9,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	RestartPolicy        RestartPolicy          `protobuf:"varint,10,opt,name=restart_policy,json=restartPolicy,proto3,enum=scheduler.v1.RestartPolicy" json:"restart_policy,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ContainerConfig) Reset() {
	*x = ContainerConfig{}
	mi := &file_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerConfig) ProtoMessage() {}

func (x *ContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerConfig.ProtoReflect.Descriptor instead.
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerConfig) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ContainerConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ContainerConfig) GetPorts() []*PortMapping {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ContainerConfig) GetVolumes() []*VolumeMount {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *ContainerConfig) GetEnvironmentVariables() map[string]string {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *ContainerConfig) GetResources() *ResourceLimits {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ContainerConfig) GetHealthCheck() *HealthCheck {
	if x != nil {
		return x.HealthCheck
	}
	return nil
}

func (x *ContainerConfig) GetRestartPolicy() RestartPolicy {
	if x != nil {
		return x.RestartPolicy
	}
	return RestartPolicy_RESTART_POLICY_UNSPECIFIED
}

// Port mapping configuration
type PortMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerPort int32                  `protobuf:"varint,1,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
	HostPort      int32                  `protobuf:"varint,2,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"` // tcp, udp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortMapping) Reset() {
	*x = PortMapping{}
	mi := &file_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMapping) ProtoMessage() {}

func (x *PortMapping) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMapping.ProtoReflect.Descriptor instead.
func (*PortMapping) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *PortMapping) GetContainerPort() int32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

func (x *PortMapping) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *PortMapping) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

// Volume mount configuration
type VolumeMount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MountPath     string                 `protobuf:"bytes,2,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	HostPath      string                 `protobuf:"bytes,3,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeMount) Reset() {
	*x = VolumeMount{}
	mi := &file_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMount) ProtoMessage() {}

func (x *VolumeMount) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMount.ProtoReflect.Descriptor instead.
func (*VolumeMount) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *VolumeMount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VolumeMount) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *VolumeMount) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *VolumeMount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

// Resource limits for containers
type ResourceLimits struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemoryMb      int64                  `protobuf:"varint,1,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	CpuCores      float64                `protobuf:"fixed64,2,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	DiskMb        int64                  `protobuf:"varint,3,opt,name=disk_mb,json=diskMb,proto3" json:"disk_mb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimits.ProtoReflect.Descriptor instead.
func (*ResourceLimits) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceLimits) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ResourceLimits) GetCpuCores() float64 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *ResourceLimits) GetDiskMb() int64 {
	if x != nil {
		return x.DiskMb
	}
	return 0
}

// Health check configuration
type HealthCheck struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Command            []string               `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
	IntervalSeconds    int32                  `protobuf:"varint,2,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	TimeoutSeconds     int32                  `protobuf:"varint,3,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	Retries            int32                  `protobuf:"varint,4,opt,name=retries,proto3" json:"retries,omitempty"`
	StartPeriodSeconds int32                  `protobuf:"varint,5,opt,name=start_period_seconds,json=startPeriodSeconds,proto3" json:"start_period_seconds,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *HealthCheck) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *HealthCheck) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *HealthCheck) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *HealthCheck) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (x *HealthCheck) GetStartPeriodSeconds() int32 {
	if x != nil {
		return x.StartPeriodSeconds
	}
	return 0
}

// Application stack definitions
type ApplicationStack struct {
	state              protoimpl.MessageState      `protogen:"open.v1"`
	Name               string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version            string                      `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Frontend           *FrontendConfig             `protobuf:"bytes,3,opt,name=frontend,proto3" json:"frontend,omitempty"`
	Backend            *BackendConfig              `protobuf:"bytes,4,opt,name=backend,proto3" json:"backend,omitempty"`
	Database           *DatabaseConfig             `protobuf:"bytes,5,opt,name=database,proto3" json:"database,omitempty"`
	AdditionalServices map[string]*ContainerConfig `protobuf:"bytes,6,rep,name=additional_services,json=additionalServices,proto3" json:"additional_services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ApplicationStack) Reset() {
	*x = ApplicationStack{}
	mi := &file_scheduler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStack) ProtoMessage() {}

func (x *ApplicationStack) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStack.ProtoReflect.Descriptor instead.
func (*ApplicationStack) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *ApplicationStack) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationStack) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ApplicationStack) GetFrontend() *FrontendConfig {
	if x != nil {
		return x.Frontend
	}
	return nil
}

func (x *ApplicationStack) GetBackend() *BackendConfig {
	if x != nil {
		return x.Backend
	}
	return nil
}

func (x *ApplicationStack) GetDatabase() *DatabaseConfig {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *ApplicationStack) GetAdditionalServices() map[string]*ContainerConfig {
	if x != nil {
		return x.AdditionalServices
	}
	return nil
}

// Frontend container configuration
type FrontendConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Container     *ContainerConfig       `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	Domains       []string               `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	SslEnabled    bool                   `protobuf:"varint,3,opt,name=ssl_enabled,json=sslEnabled,proto3" json:"ssl_enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrontendConfig) Reset() {
	*x = FrontendConfig{}
	mi := &file_scheduler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrontendConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendConfig) ProtoMessage() {}

func (x *FrontendConfig) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendConfig.ProtoReflect.Descriptor instead.
func (*FrontendConfig) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{6}
}

func (x *FrontendConfig) GetContainer() *ContainerConfig {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *FrontendConfig) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *FrontendConfig) GetSslEnabled() bool {
	if x != nil {
		return x.SslEnabled
	}
	return false
}

// Backend container configuration
type BackendConfig struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Container                *ContainerConfig       `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	DatabaseConnectionString string                 `protobuf:"bytes,2,opt,name=database_connection_string,json=databaseConnectionString,proto3" json:"database_connection_string,omitempty"`
	ApiKeys                  map[string]string      `protobuf:"bytes,3,rep,name=api_keys,json=apiKeys,proto3" json:"api_keys,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *BackendConfig) Reset() {
	*x = BackendConfig{}
	mi := &file_scheduler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackendConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendConfig) ProtoMessage() {}

func (x *BackendConfig) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendConfig.ProtoReflect.Descriptor instead.
func (*BackendConfig) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{7}
}

func (x *BackendConfig) GetContainer() *ContainerConfig {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *BackendConfig) GetDatabaseConnectionString() string {
	if x != nil {
		return x.DatabaseConnectionString
	}
	return ""
}

func (x *BackendConfig) GetApiKeys() map[string]string {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

// Database container configuration
type DatabaseConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Container         *ContainerConfig       `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	DatabaseName      string                 `protobuf:"bytes,2,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	Username          string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password          string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	PersistentStorage bool                   `protobuf:"varint,5,opt,name=persistent_storage,json=persistentStorage,proto3" json:"persistent_storage,omitempty"`
	StoragePath       string                 `protobuf:"bytes,6,opt,name=storage_path,json=storagePath,proto3" json:"storage_path,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DatabaseConfig) Reset() {
	*x = DatabaseConfig{}
	mi := &file_scheduler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseConfig) ProtoMessage() {}

func (x *DatabaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseConfig.ProtoReflect.Descriptor instead.
func (*DatabaseConfig) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{8}
}

func (x *DatabaseConfig) GetContainer() *ContainerConfig {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *DatabaseConfig) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *DatabaseConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DatabaseConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DatabaseConfig) GetPersistentStorage() bool {
	if x != nil {
		return x.PersistentStorage
	}
	return false
}

func (x *DatabaseConfig) GetStoragePath() string {
	if x != nil {
		return x.StoragePath
	}
	return ""
}

// Environment specification - defines how an environment should be configured
type EnvironmentSpecification struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ApplicationStack *ApplicationStack      `protobuf:"bytes,3,opt,name=application_stack,json=applicationStack,proto3" json:"application_stack,omitempty"`
	Labels           map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Network          *NetworkConfig         `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EnvironmentSpecification) Reset() {
	*x = EnvironmentSpecification{}
	mi := &file_scheduler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentSpecification) ProtoMessage() {}

func (x *EnvironmentSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentSpecification.ProtoReflect.Descriptor instead.
func (*EnvironmentSpecification) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{9}
}

func (x *EnvironmentSpecification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvironmentSpecification) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnvironmentSpecification) GetApplicationStack() *ApplicationStack {
	if x != nil {
		return x.ApplicationStack
	}
	return nil
}

func (x *EnvironmentSpecification) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *EnvironmentSpecification) GetNetwork() *NetworkConfig {
	if x != nil {
		return x.Network
	}
	return nil
}

// Network configuration for the environment
type NetworkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkName   string                 `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	Subnet        string                 `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Gateway       string                 `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Isolated      bool                   `protobuf:"varint,4,opt,name=isolated,proto3" json:"isolated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	mi := &file_scheduler_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkConfig) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *NetworkConfig) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *NetworkConfig) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *NetworkConfig) GetIsolated() bool {
	if x != nil {
		return x.Isolated
	}
	return false
}

// Environment represents a deployed containerized environment
type Environment struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Spec          *EnvironmentSpecification `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        EnvironmentStatus         `protobuf:"varint,4,opt,name=status,proto3,enum=scheduler.v1.EnvironmentStatus" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp    `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp    `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Containers    []*ContainerInstance      `protobuf:"bytes,7,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Environment) Reset() {
	*x = Environment{}
	mi := &file_scheduler_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{11}
}

func (x *Environment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Environment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Environment) GetSpec() *EnvironmentSpecification {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Environment) GetStatus() EnvironmentStatus {
	if x != nil {
		return x.Status
	}
	return EnvironmentStatus_ENVIRONMENT_STATUS_UNSPECIFIED
}

func (x *Environment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Environment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Environment) GetContainers() []*ContainerInstance {
	if x != nil {
		return x.Containers
	}
	return nil
}

// Instance of a running container within an environment
type ContainerInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Status        ContainerStatus        `protobuf:"varint,4,opt,name=status,proto3,enum=scheduler.v1.ContainerStatus" json:"status,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	ExposedPorts  []*PortMapping         `protobuf:"bytes,6,rep,name=exposed_ports,json=exposedPorts,proto3" json:"exposed_ports,omitempty"`
	IpAddress     string                 `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerInstance) Reset() {
	*x = ContainerInstance{}
	mi := &file_scheduler_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerInstance) ProtoMessage() {}

func (x *ContainerInstance) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerInstance.ProtoReflect.Descriptor instead.
func (*ContainerInstance) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{12}
}

func (x *ContainerInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerInstance) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerInstance) GetStatus() ContainerStatus {
	if x != nil {
		return x.Status
	}
	return ContainerStatus_CONTAINER_STATUS_UNSPECIFIED
}

func (x *ContainerInstance) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ContainerInstance) GetExposedPorts() []*PortMapping {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

func (x *ContainerInstance) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

type CreateEnvironmentRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Spec          *EnvironmentSpecification `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEnvironmentRequest) Reset() {
	*x = CreateEnvironmentRequest{}
	mi := &file_scheduler_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentRequest) ProtoMessage() {}

func (x *CreateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{13}
}

func (x *CreateEnvironmentRequest) GetSpec() *EnvironmentSpecification {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEnvironmentResponse) Reset() {
	*x = CreateEnvironmentResponse{}
	mi := &file_scheduler_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentResponse) ProtoMessage() {}

func (x *CreateEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{14}
}

func (x *CreateEnvironmentResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type GetEnvironmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentRequest) Reset() {
	*x = GetEnvironmentRequest{}
	mi := &file_scheduler_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentRequest) ProtoMessage() {}

func (x *GetEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{15}
}

func (x *GetEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentResponse) Reset() {
	*x = GetEnvironmentResponse{}
	mi := &file_scheduler_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentResponse) ProtoMessage() {}

func (x *GetEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*GetEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{16}
}

func (x *GetEnvironmentResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type UpdateEnvironmentRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          *EnvironmentSpecification `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEnvironmentRequest) Reset() {
	*x = UpdateEnvironmentRequest{}
	mi := &file_scheduler_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvironmentRequest) ProtoMessage() {}

func (x *UpdateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEnvironmentRequest) GetSpec() *EnvironmentSpecification {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEnvironmentResponse) Reset() {
	*x = UpdateEnvironmentResponse{}
	mi := &file_scheduler_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvironmentResponse) ProtoMessage() {}

func (x *UpdateEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*UpdateEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateEnvironmentResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type DeleteEnvironmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEnvironmentRequest) Reset() {
	*x = DeleteEnvironmentRequest{}
	mi := &file_scheduler_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvironmentRequest) ProtoMessage() {}

func (x *DeleteEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEnvironmentResponse) Reset() {
	*x = DeleteEnvironmentResponse{}
	mi := &file_scheduler_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvironmentResponse) ProtoMessage() {}

func (x *DeleteEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*DeleteEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteEnvironmentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListEnvironmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filters       map[string]string      `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEnvironmentsRequest) Reset() {
	*x = ListEnvironmentsRequest{}
	mi := &file_scheduler_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEnvironmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentsRequest) ProtoMessage() {}

func (x *ListEnvironmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentsRequest.ProtoReflect.Descriptor instead.
func (*ListEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{21}
}

func (x *ListEnvironmentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEnvironmentsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListEnvironmentsRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListEnvironmentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environments  []*Environment         `protobuf:"bytes,1,rep,name=environments,proto3" json:"environments,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEnvironmentsResponse) Reset() {
	*x = ListEnvironmentsResponse{}
	mi := &file_scheduler_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEnvironmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentsResponse) ProtoMessage() {}

func (x *ListEnvironmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentsResponse.ProtoReflect.Descriptor instead.
func (*ListEnvironmentsResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{22}
}

func (x *ListEnvironmentsResponse) GetEnvironments() []*Environment {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *ListEnvironmentsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListEnvironmentsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type StartEnvironmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartEnvironmentRequest) Reset() {
	*x = StartEnvironmentRequest{}
	mi := &file_scheduler_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartEnvironmentRequest) ProtoMessage() {}

func (x *StartEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*StartEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{23}
}

func (x *StartEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StartEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartEnvironmentResponse) Reset() {
	*x = StartEnvironmentResponse{}
	mi := &file_scheduler_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartEnvironmentResponse) ProtoMessage() {}

func (x *StartEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*StartEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{24}
}

func (x *StartEnvironmentResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type StopEnvironmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopEnvironmentRequest) Reset() {
	*x = StopEnvironmentRequest{}
	mi := &file_scheduler_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopEnvironmentRequest) ProtoMessage() {}

func (x *StopEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*StopEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{25}
}

func (x *StopEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StopEnvironmentRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type StopEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopEnvironmentResponse) Reset() {
	*x = StopEnvironmentResponse{}
	mi := &file_scheduler_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopEnvironmentResponse) ProtoMessage() {}

func (x *StopEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*StopEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{26}
}

func (x *StopEnvironmentResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type RestartEnvironmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartEnvironmentRequest) Reset() {
	*x = RestartEnvironmentRequest{}
	mi := &file_scheduler_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartEnvironmentRequest) ProtoMessage() {}

func (x *RestartEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*RestartEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{27}
}

func (x *RestartEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RestartEnvironmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartEnvironmentResponse) Reset() {
	*x = RestartEnvironmentResponse{}
	mi := &file_scheduler_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartEnvironmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartEnvironmentResponse) ProtoMessage() {}

func (x *RestartEnvironmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartEnvironmentResponse.ProtoReflect.Descriptor instead.
func (*RestartEnvironmentResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{28}
}

func (x *RestartEnvironmentResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type GetEnvironmentStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentStatusRequest) Reset() {
	*x = GetEnvironmentStatusRequest{}
	mi := &file_scheduler_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentStatusRequest) ProtoMessage() {}

func (x *GetEnvironmentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentStatusRequest.ProtoReflect.Descriptor instead.
func (*GetEnvironmentStatusRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{29}
}

func (x *GetEnvironmentStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEnvironmentStatusResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Environment      *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	ContainerMetrics []*ContainerMetrics    `protobuf:"bytes,2,rep,name=container_metrics,json=containerMetrics,proto3" json:"container_metrics,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetEnvironmentStatusResponse) Reset() {
	*x = GetEnvironmentStatusResponse{}
	mi := &file_scheduler_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentStatusResponse) ProtoMessage() {}

func (x *GetEnvironmentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentStatusResponse.ProtoReflect.Descriptor instead.
func (*GetEnvironmentStatusResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{30}
}

func (x *GetEnvironmentStatusResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *GetEnvironmentStatusResponse) GetContainerMetrics() []*ContainerMetrics {
	if x != nil {
		return x.ContainerMetrics
	}
	return nil
}

type ContainerMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContainerId      string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	CpuUsagePercent  float64                `protobuf:"fixed64,2,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsageBytes int64                  `protobuf:"varint,3,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	MemoryLimitBytes int64                  `protobuf:"varint,4,opt,name=memory_limit_bytes,json=memoryLimitBytes,proto3" json:"memory_limit_bytes,omitempty"`
	DiskUsageBytes   int64                  `protobuf:"varint,5,opt,name=disk_usage_bytes,json=diskUsageBytes,proto3" json:"disk_usage_bytes,omitempty"`
	NetworkRxBytes   int64                  `protobuf:"varint,6,opt,name=network_rx_bytes,json=networkRxBytes,proto3" json:"network_rx_bytes,omitempty"`
	NetworkTxBytes   int64                  `protobuf:"varint,7,opt,name=network_tx_bytes,json=networkTxBytes,proto3" json:"network_tx_bytes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContainerMetrics) Reset() {
	*x = ContainerMetrics{}
	mi := &file_scheduler_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerMetrics) ProtoMessage() {}

func (x *ContainerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerMetrics.ProtoReflect.Descriptor instead.
func (*ContainerMetrics) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{31}
}

func (x *ContainerMetrics) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerMetrics) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *ContainerMetrics) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *ContainerMetrics) GetMemoryLimitBytes() int64 {
	if x != nil {
		return x.MemoryLimitBytes
	}
	return 0
}

func (x *ContainerMetrics) GetDiskUsageBytes() int64 {
	if x != nil {
		return x.DiskUsageBytes
	}
	return 0
}

func (x *ContainerMetrics) GetNetworkRxBytes() int64 {
	if x != nil {
		return x.NetworkRxBytes
	}
	return 0
}

func (x *ContainerMetrics) GetNetworkTxBytes() int64 {
	if x != nil {
		return x.NetworkTxBytes
	}
	return 0
}

type GetEnvironmentLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContainerName string                 `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"` // optional, if empty returns logs for all containers
	Since         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=since,proto3" json:"since,omitempty"`
	TailLines     int32                  `protobuf:"varint,4,opt,name=tail_lines,json=tailLines,proto3" json:"tail_lines,omitempty"`
	Follow        bool                   `protobuf:"varint,5,opt,name=follow,proto3" json:"follow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentLogsRequest) Reset() {
	*x = GetEnvironmentLogsRequest{}
	mi := &file_scheduler_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentLogsRequest) ProtoMessage() {}

func (x *GetEnvironmentLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentLogsRequest.ProtoReflect.Descriptor instead.
func (*GetEnvironmentLogsRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{32}
}

func (x *GetEnvironmentLogsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetEnvironmentLogsRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *GetEnvironmentLogsRequest) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *GetEnvironmentLogsRequest) GetTailLines() int32 {
	if x != nil {
		return x.TailLines
	}
	return 0
}

func (x *GetEnvironmentLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type GetEnvironmentLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerName string                 `protobuf:"bytes,1,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level         string                 `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"` // info, warn, error, debug
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEnvironmentLogsResponse) Reset() {
	*x = GetEnvironmentLogsResponse{}
	mi := &file_scheduler_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvironmentLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentLogsResponse) ProtoMessage() {}

func (x *GetEnvironmentLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentLogsResponse.ProtoReflect.Descriptor instead.
func (*GetEnvironmentLogsResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{33}
}

func (x *GetEnvironmentLogsResponse) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *GetEnvironmentLogsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetEnvironmentLogsResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetEnvironmentLogsResponse) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

var File_scheduler_proto protoreflect.FileDescriptor

const file_scheduler_proto_rawDesc = "" +
	"\n" +
	"\x0fscheduler.proto\x12\fscheduler.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc4\x04\n" +
	"\x0fContainerConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x12\x18\n" +
	"\acommand\x18\x03 \x03(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x04 \x03(\tR\x04args\x12/\n" +
	"\x05ports\x18\x05 \x03(\v2\x19.scheduler.v1.PortMappingR\x05ports\x123\n" +
	"\avolumes\x18\x06 \x03(\v2\x19.scheduler.v1.VolumeMountR\avolumes\x12l\n" +
	"\x15environment_variables\x18\a \x03(\v27.scheduler.v1.ContainerConfig.EnvironmentVariablesEntryR\x14environmentVariables\x12:\n" +
	"\tresources\x18\b \x01(\v2\x1c.scheduler.v1.ResourceLimitsR\tresources\x12<\n" +
	"\fhealth_check\x18\t \x01(\v2\x19.scheduler.v1.HealthCheckR\vhealthCheck\x12B\n" +
	"\x0erestart_policy\x18\n" +
	" \x01(\x0e2\x1b.scheduler.v1.RestartPolicyR\rrestartPolicy\x1aG\n" +
	"\x19EnvironmentVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"m\n" +
	"\vPortMapping\x12%\n" +
	"\x0econtainer_port\x18\x01 \x01(\x05R\rcontainerPort\x12\x1b\n" +
	"\thost_port\x18\x02 \x01(\x05R\bhostPort\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\"z\n" +
	"\vVolumeMount\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"mount_path\x18\x02 \x01(\tR\tmountPath\x12\x1b\n" +
	"\thost_path\x18\x03 \x01(\tR\bhostPath\x12\x1b\n" +
	"\tread_only\x18\x04 \x01(\bR\breadOnly\"c\n" +
	"\x0eResourceLimits\x12\x1b\n" +
	"\tmemory_mb\x18\x01 \x01(\x03R\bmemoryMb\x12\x1b\n" +
	"\tcpu_cores\x18\x02 \x01(\x01R\bcpuCores\x12\x17\n" +
	"\adisk_mb\x18\x03 \x01(\x03R\x06diskMb\"\xc7\x01\n" +
	"\vHealthCheck\x12\x18\n" +
	"\acommand\x18\x01 \x03(\tR\acommand\x12)\n" +
	"\x10interval_seconds\x18\x02 \x01(\x05R\x0fintervalSeconds\x12'\n" +
	"\x0ftimeout_seconds\x18\x03 \x01(\x05R\x0etimeoutSeconds\x12\x18\n" +
	"\aretries\x18\x04 \x01(\x05R\aretries\x120\n" +
	"\x14start_period_seconds\x18\x05 \x01(\x05R\x12startPeriodSeconds\"\xba\x03\n" +
	"\x10ApplicationStack\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x128\n" +
	"\bfrontend\x18\x03 \x01(\v2\x1c.scheduler.v1.FrontendConfigR\bfrontend\x125\n" +
	"\abackend\x18\x04 \x01(\v2\x1b.scheduler.v1.BackendConfigR\abackend\x128\n" +
	"\bdatabase\x18\x05 \x01(\v2\x1c.scheduler.v1.DatabaseConfigR\bdatabase\x12g\n" +
	"\x13additional_services\x18\x06 \x03(\v26.scheduler.v1.ApplicationStack.AdditionalServicesEntryR\x12additionalServices\x1ad\n" +
	"\x17AdditionalServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.scheduler.v1.ContainerConfigR\x05value:\x028\x01\"\x88\x01\n" +
	"\x0eFrontendConfig\x12;\n" +
	"\tcontainer\x18\x01 \x01(\v2\x1d.scheduler.v1.ContainerConfigR\tcontainer\x12\x18\n" +
	"\adomains\x18\x02 \x03(\tR\adomains\x12\x1f\n" +
	"\vssl_enabled\x18\x03 \x01(\bR\n" +
	"sslEnabled\"\x8b\x02\n" +
	"\rBackendConfig\x12;\n" +
	"\tcontainer\x18\x01 \x01(\v2\x1d.scheduler.v1.ContainerConfigR\tcontainer\x12<\n" +
	"\x1adatabase_connection_string\x18\x02 \x01(\tR\x18databaseConnectionString\x12C\n" +
	"\bapi_keys\x18\x03 \x03(\v2(.scheduler.v1.BackendConfig.ApiKeysEntryR\aapiKeys\x1a:\n" +
	"\fApiKeysEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfc\x01\n" +
	"\x0eDatabaseConfig\x12;\n" +
	"\tcontainer\x18\x01 \x01(\v2\x1d.scheduler.v1.ContainerConfigR\tcontainer\x12#\n" +
	"\rdatabase_name\x18\x02 \x01(\tR\fdatabaseName\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12-\n" +
	"\x12persistent_storage\x18\x05 \x01(\bR\x11persistentStorage\x12!\n" +
	"\fstorage_path\x18\x06 \x01(\tR\vstoragePath\"\xdb\x02\n" +
	"\x18EnvironmentSpecification\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12K\n" +
	"\x11application_stack\x18\x03 \x01(\v2\x1e.scheduler.v1.ApplicationStackR\x10applicationStack\x12J\n" +
	"\x06labels\x18\x04 \x03(\v22.scheduler.v1.EnvironmentSpecification.LabelsEntryR\x06labels\x125\n" +
	"\anetwork\x18\x05 \x01(\v2\x1b.scheduler.v1.NetworkConfigR\anetwork\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x01\n" +
	"\rNetworkConfig\x12!\n" +
	"\fnetwork_name\x18\x01 \x01(\tR\vnetworkName\x12\x16\n" +
	"\x06subnet\x18\x02 \x01(\tR\x06subnet\x12\x18\n" +
	"\agateway\x18\x03 \x01(\tR\agateway\x12\x1a\n" +
	"\bisolated\x18\x04 \x01(\bR\bisolated\"\xdd\x02\n" +
	"\vEnvironment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12:\n" +
	"\x04spec\x18\x03 \x01(\v2&.scheduler.v1.EnvironmentSpecificationR\x04spec\x127\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1f.scheduler.v1.EnvironmentStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12?\n" +
	"\n" +
	"containers\x18\a \x03(\v2\x1f.scheduler.v1.ContainerInstanceR\n" +
	"containers\"\x9e\x02\n" +
	"\x11ContainerInstance\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x125\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1d.scheduler.v1.ContainerStatusR\x06status\x129\n" +
	"\n" +
	"started_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12>\n" +
	"\rexposed_ports\x18\x06 \x03(\v2\x19.scheduler.v1.PortMappingR\fexposedPorts\x12\x1d\n" +
	"\n" +
	"ip_address\x18\a \x01(\tR\tipAddress\"V\n" +
	"\x18CreateEnvironmentRequest\x12:\n" +
	"\x04spec\x18\x01 \x01(\v2&.scheduler.v1.EnvironmentSpecificationR\x04spec\"X\n" +
	"\x19CreateEnvironmentResponse\x12;\n" +
	"\venvironment\x18\x01 \x01(\v2\x19.scheduler.v1.EnvironmentR\venvironment\"'\n" +
	"\x15GetEnvironmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"U\n" +
	"\x16GetEnvironmentResponse\x12;\n" +
	"\venvironment\x18\x01 \x01(\v2\x19.scheduler.v1.EnvironmentR\venvironment\"f\n" +
	"\x18UpdateEnvironmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12:\n" +
	"\x04spec\x18\x02 \x01(\v2&.scheduler.v1.EnvironmentSpecificationR\x04spec\"X\n" +
	"\x19UpdateEnvironmentResponse\x12;\n" +
	"\venvironment\x18\x01 \x01(\v2\x19.scheduler.v1.EnvironmentR\venvironment\"*\n" +
	"\x18DeleteEnvironmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"5\n" +
	"\x19DeleteEnvironmentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xdf\x01\n" +
	"\x17ListEnvironmentsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12L\n" +
	"\afilters\x18\x03 \x03(\v22.scheduler.v1.ListEnvironmentsRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x01\n" +
	"\x18ListEnvironmentsResponse\x12=\n" +
	"\fenvironments\x18\x01 \x03(\v2\x19.scheduler.v1.EnvironmentR\fenvironments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\")\n" +
	"\x17StartEnvironmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"W\n" +
	"\x18StartEnvironmentResponse\x12;\n" +
	"\venvironment\x18\x01 \x01(\v2\x19.scheduler.v1.EnvironmentR\venvironment\">\n" +
	"\x16StopEnvironmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"V\n" +
	"\x17StopEnvironmentResponse\x12;\n" +
	"\venvironment\x18\x01 \x01(\v2\x19.scheduler.v1.EnvironmentR\venvironment\"+\n" +
	"\x19RestartEnvironmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Y\n" +
	"\x1aRestartEnvironmentResponse\x12;\n" +
	"\venvironment\x18\x01 \x01(\v2\x19.scheduler.v1.EnvironmentR\venvironment\"-\n" +
	"\x1bGetEnvironmentStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xa8\x01\n" +
	"\x1cGetEnvironmentStatusResponse\x12;\n" +
	"\venvironment\x18\x01 \x01(\v2\x19.scheduler.v1.EnvironmentR\venvironment\x12K\n" +
	"\x11container_metrics\x18\x02 \x03(\v2\x1e.scheduler.v1.ContainerMetricsR\x10containerMetrics\"\xbb\x02\n" +
	"\x10ContainerMetrics\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12*\n" +
	"\x11cpu_usage_percent\x18\x02 \x01(\x01R\x0fcpuUsagePercent\x12,\n" +
	"\x12memory_usage_bytes\x18\x03 \x01(\x03R\x10memoryUsageBytes\x12,\n" +
	"\x12memory_limit_bytes\x18\x04 \x01(\x03R\x10memoryLimitBytes\x12(\n" +
	"\x10disk_usage_bytes\x18\x05 \x01(\x03R\x0ediskUsageBytes\x12(\n" +
	"\x10network_rx_bytes\x18\x06 \x01(\x03R\x0enetworkRxBytes\x12(\n" +
	"\x10network_tx_bytes\x18\a \x01(\x03R\x0enetworkTxBytes\"\xbb\x01\n" +
	"\x19GetEnvironmentLogsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0econtainer_name\x18\x02 \x01(\tR\rcontainerName\x120\n" +
	"\x05since\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x05since\x12\x1d\n" +
	"\n" +
	"tail_lines\x18\x04 \x01(\x05R\ttailLines\x12\x16\n" +
	"\x06follow\x18\x05 \x01(\bR\x06follow\"\xad\x01\n" +
	"\x1aGetEnvironmentLogsResponse\x12%\n" +
	"\x0econtainer_name\x18\x01 \x01(\tR\rcontainerName\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05level\x18\x04 \x01(\tR\x05level*\xa3\x01\n" +
	"\rRestartPolicy\x12\x1e\n" +
	"\x1aRESTART_POLICY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11RESTART_POLICY_NO\x10\x01\x12\x19\n" +
	"\x15RESTART_POLICY_ALWAYS\x10\x02\x12\x1d\n" +
	"\x19RESTART_POLICY_ON_FAILURE\x10\x03\x12!\n" +
	"\x1dRESTART_POLICY_UNLESS_STOPPED\x10\x04*\x99\x02\n" +
	"\x11EnvironmentStatus\x12\"\n" +
	"\x1eENVIRONMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aENVIRONMENT_STATUS_PENDING\x10\x01\x12\x1f\n" +
	"\x1bENVIRONMENT_STATUS_CREATING\x10\x02\x12\x1e\n" +
	"\x1aENVIRONMENT_STATUS_RUNNING\x10\x03\x12\x1f\n" +
	"\x1bENVIRONMENT_STATUS_STOPPING\x10\x04\x12\x1e\n" +
	"\x1aENVIRONMENT_STATUS_STOPPED\x10\x05\x12\x1d\n" +
	"\x19ENVIRONMENT_STATUS_FAILED\x10\x06\x12\x1f\n" +
	"\x1bENVIRONMENT_STATUS_UPDATING\x10\a*\x88\x02\n" +
	"\x0fContainerStatus\x12 \n" +
	"\x1cCONTAINER_STATUS_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18CONTAINER_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18CONTAINER_STATUS_PULLING\x10\x02\x12\x1c\n" +
	"\x18CONTAINER_STATUS_RUNNING\x10\x03\x12\x1d\n" +
	"\x19CONTAINER_STATUS_STOPPING\x10\x04\x12\x1c\n" +
	"\x18CONTAINER_STATUS_STOPPED\x10\x05\x12\x1b\n" +
	"\x17CONTAINER_STATUS_FAILED\x10\x06\x12\x1f\n" +
	"\x1bCONTAINER_STATUS_RESTARTING\x10\a2\x8a\b\n" +
	"\x10SchedulerService\x12d\n" +
	"\x11CreateEnvironment\x12&.scheduler.v1.CreateEnvironmentRequest\x1a'.scheduler.v1.CreateEnvironmentResponse\x12[\n" +
	"\x0eGetEnvironment\x12#.scheduler.v1.GetEnvironmentRequest\x1a$.scheduler.v1.GetEnvironmentResponse\x12d\n" +
	"\x11UpdateEnvironment\x12&.scheduler.v1.UpdateEnvironmentRequest\x1a'.scheduler.v1.UpdateEnvironmentResponse\x12d\n" +
	"\x11DeleteEnvironment\x12&.scheduler.v1.DeleteEnvironmentRequest\x1a'.scheduler.v1.DeleteEnvironmentResponse\x12a\n" +
	"\x10ListEnvironments\x12%.scheduler.v1.ListEnvironmentsRequest\x1a&.scheduler.v1.ListEnvironmentsResponse\x12a\n" +
	"\x10StartEnvironment\x12%.scheduler.v1.StartEnvironmentRequest\x1a&.scheduler.v1.StartEnvironmentResponse\x12^\n" +
	"\x0fStopEnvironment\x12$.scheduler.v1.StopEnvironmentRequest\x1a%.scheduler.v1.StopEnvironmentResponse\x12g\n" +
	"\x12RestartEnvironment\x12'.scheduler.v1.RestartEnvironmentRequest\x1a(.scheduler.v1.RestartEnvironmentResponse\x12m\n" +
	"\x14GetEnvironmentStatus\x12).scheduler.v1.GetEnvironmentStatusRequest\x1a*.scheduler.v1.GetEnvironmentStatusResponse\x12i\n" +
	"\x12GetEnvironmentLogs\x12'.scheduler.v1.GetEnvironmentLogsRequest\x1a(.scheduler.v1.GetEnvironmentLogsResponse0\x01B\x15Z\x13scheduler/proto/genb\x06proto3"

var (
	file_scheduler_proto_rawDescOnce sync.Once
	file_scheduler_proto_rawDescData []byte
)

func file_scheduler_proto_rawDescGZIP() []byte {
	file_scheduler_proto_rawDescOnce.Do(func() {
		file_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scheduler_proto_rawDesc), len(file_scheduler_proto_rawDesc)))
	})
	return file_scheduler_proto_rawDescData
}

var file_scheduler_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_scheduler_proto_goTypes = []any{
	(RestartPolicy)(0),                   // 0: scheduler.v1.RestartPolicy
	(EnvironmentStatus)(0),               // 1: scheduler.v1.EnvironmentStatus
	(ContainerStatus)(0),                 // 2: scheduler.v1.ContainerStatus
	(*ContainerConfig)(nil),              // 3: scheduler.v1.ContainerConfig
	(*PortMapping)(nil),                  // 4: scheduler.v1.PortMapping
	(*VolumeMount)(nil),                  // 5: scheduler.v1.VolumeMount
	(*ResourceLimits)(nil),               // 6: scheduler.v1.ResourceLimits
	(*HealthCheck)(nil),                  // 7: scheduler.v1.HealthCheck
	(*ApplicationStack)(nil),             // 8: scheduler.v1.ApplicationStack
	(*FrontendConfig)(nil),               // 9: scheduler.v1.FrontendConfig
	(*BackendConfig)(nil),                // 10: scheduler.v1.BackendConfig
	(*DatabaseConfig)(nil),               // 11: scheduler.v1.DatabaseConfig
	(*EnvironmentSpecification)(nil),     // 12: scheduler.v1.EnvironmentSpecification
	(*NetworkConfig)(nil),                // 13: scheduler.v1.NetworkConfig
	(*Environment)(nil),                  // 14: scheduler.v1.Environment
	(*ContainerInstance)(nil),            // 15: scheduler.v1.ContainerInstance
	(*CreateEnvironmentRequest)(nil),     // 16: scheduler.v1.CreateEnvironmentRequest
	(*CreateEnvironmentResponse)(nil),    // 17: scheduler.v1.CreateEnvironmentResponse
	(*GetEnvironmentRequest)(nil),        // 18: scheduler.v1.GetEnvironmentRequest
	(*GetEnvironmentResponse)(nil),       // 19: scheduler.v1.GetEnvironmentResponse
	(*UpdateEnvironmentRequest)(nil),     // 20: scheduler.v1.UpdateEnvironmentRequest
	(*UpdateEnvironmentResponse)(nil),    // 21: scheduler.v1.UpdateEnvironmentResponse
	(*DeleteEnvironmentRequest)(nil),     // 22: scheduler.v1.DeleteEnvironmentRequest
	(*DeleteEnvironmentResponse)(nil),    // 23: scheduler.v1.DeleteEnvironmentResponse
	(*ListEnvironmentsRequest)(nil),      // 24: scheduler.v1.ListEnvironmentsRequest
	(*ListEnvironmentsResponse)(nil),     // 25: scheduler.v1.ListEnvironmentsResponse
	(*StartEnvironmentRequest)(nil),      // 26: scheduler.v1.StartEnvironmentRequest
	(*StartEnvironmentResponse)(nil),     // 27: scheduler.v1.StartEnvironmentResponse
	(*StopEnvironmentRequest)(nil),       // 28: scheduler.v1.StopEnvironmentRequest
	(*StopEnvironmentResponse)(nil),      // 29: scheduler.v1.StopEnvironmentResponse
	(*RestartEnvironmentRequest)(nil),    // 30: scheduler.v1.RestartEnvironmentRequest
	(*RestartEnvironmentResponse)(nil),   // 31: scheduler.v1.RestartEnvironmentResponse
	(*GetEnvironmentStatusRequest)(nil),  // 32: scheduler.v1.GetEnvironmentStatusRequest
	(*GetEnvironmentStatusResponse)(nil), // 33: scheduler.v1.GetEnvironmentStatusResponse
	(*ContainerMetrics)(nil),             // 34: scheduler.v1.ContainerMetrics
	(*GetEnvironmentLogsRequest)(nil),    // 35: scheduler.v1.GetEnvironmentLogsRequest
	(*GetEnvironmentLogsResponse)(nil),   // 36: scheduler.v1.GetEnvironmentLogsResponse
	nil,                                  // 37: scheduler.v1.ContainerConfig.EnvironmentVariablesEntry
	nil,                                  // 38: scheduler.v1.ApplicationStack.AdditionalServicesEntry
	nil,                                  // 39: scheduler.v1.BackendConfig.ApiKeysEntry
	nil,                                  // 40: scheduler.v1.EnvironmentSpecification.LabelsEntry
	nil,                                  // 41: scheduler.v1.ListEnvironmentsRequest.FiltersEntry
	(*timestamppb.Timestamp)(nil),        // 42: google.protobuf.Timestamp
}
var file_scheduler_proto_depIdxs = []int32{
	4,  // 0: scheduler.v1.ContainerConfig.ports:type_name -> scheduler.v1.PortMapping
	5,  // 1: scheduler.v1.ContainerConfig.volumes:type_name -> scheduler.v1.VolumeMount
	37, // 2: scheduler.v1.ContainerConfig.environment_variables:type_name -> scheduler.v1.ContainerConfig.EnvironmentVariablesEntry
	6,  // 3: scheduler.v1.ContainerConfig.resources:type_name -> scheduler.v1.ResourceLimits
	7,  // 4: scheduler.v1.ContainerConfig.health_check:type_name -> scheduler.v1.HealthCheck
	0,  // 5: scheduler.v1.ContainerConfig.restart_policy:type_name -> scheduler.v1.RestartPolicy
	9,  // 6: scheduler.v1.ApplicationStack.frontend:type_name -> scheduler.v1.FrontendConfig
	10, // 7: scheduler.v1.ApplicationStack.backend:type_name -> scheduler.v1.BackendConfig
	11, // 8: scheduler.v1.ApplicationStack.database:type_name -> scheduler.v1.DatabaseConfig
	38, // 9: scheduler.v1.ApplicationStack.additional_services:type_name -> scheduler.v1.ApplicationStack.AdditionalServicesEntry
	3,  // 10: scheduler.v1.FrontendConfig.container:type_name -> scheduler.v1.ContainerConfig
	3,  // 11: scheduler.v1.BackendConfig.container:type_name -> scheduler.v1.ContainerConfig
	39, // 12: scheduler.v1.BackendConfig.api_keys:type_name -> scheduler.v1.BackendConfig.ApiKeysEntry
	3,  // 13: scheduler.v1.DatabaseConfig.container:type_name -> scheduler.v1.ContainerConfig
	8,  // 14: scheduler.v1.EnvironmentSpecification.application_stack:type_name -> scheduler.v1.ApplicationStack
	40, // 15: scheduler.v1.EnvironmentSpecification.labels:type_name -> scheduler.v1.EnvironmentSpecification.LabelsEntry
	13, // 16: scheduler.v1.EnvironmentSpecification.network:type_name -> scheduler.v1.NetworkConfig
	12, // 17: scheduler.v1.Environment.spec:type_name -> scheduler.v1.EnvironmentSpecification
	1,  // 18: scheduler.v1.Environment.status:type_name -> scheduler.v1.EnvironmentStatus
	42, // 19: scheduler.v1.Environment.created_at:type_name -> google.protobuf.Timestamp
	42, // 20: scheduler.v1.Environment.updated_at:type_name -> google.protobuf.Timestamp
	15, // 21: scheduler.v1.Environment.containers:type_name -> scheduler.v1.ContainerInstance
	2,  // 22: scheduler.v1.ContainerInstance.status:type_name -> scheduler.v1.ContainerStatus
	42, // 23: scheduler.v1.ContainerInstance.started_at:type_name -> google.protobuf.Timestamp
	4,  // 24: scheduler.v1.ContainerInstance.exposed_ports:type_name -> scheduler.v1.PortMapping
	12, // 25: scheduler.v1.CreateEnvironmentRequest.spec:type_name -> scheduler.v1.EnvironmentSpecification
	14, // 26: scheduler.v1.CreateEnvironmentResponse.environment:type_name -> scheduler.v1.Environment
	14, // 27: scheduler.v1.GetEnvironmentResponse.environment:type_name -> scheduler.v1.Environment
	12, // 28: scheduler.v1.UpdateEnvironmentRequest.spec:type_name -> scheduler.v1.EnvironmentSpecification
	14, // 29: scheduler.v1.UpdateEnvironmentResponse.environment:type_name -> scheduler.v1.Environment
	41, // 30: scheduler.v1.ListEnvironmentsRequest.filters:type_name -> scheduler.v1.ListEnvironmentsRequest.FiltersEntry
	14, // 31: scheduler.v1.ListEnvironmentsResponse.environments:type_name -> scheduler.v1.Environment
	14, // 32: scheduler.v1.StartEnvironmentResponse.environment:type_name -> scheduler.v1.Environment
	14, // 33: scheduler.v1.StopEnvironmentResponse.environment:type_name -> scheduler.v1.Environment
	14, // 34: scheduler.v1.RestartEnvironmentResponse.environment:type_name -> scheduler.v1.Environment
	14, // 35: scheduler.v1.GetEnvironmentStatusResponse.environment:type_name -> scheduler.v1.Environment
	34, // 36: scheduler.v1.GetEnvironmentStatusResponse.container_metrics:type_name -> scheduler.v1.ContainerMetrics
	42, // 37: scheduler.v1.GetEnvironmentLogsRequest.since:type_name -> google.protobuf.Timestamp
	42, // 38: scheduler.v1.GetEnvironmentLogsResponse.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 39: scheduler.v1.ApplicationStack.AdditionalServicesEntry.value:type_name -> scheduler.v1.ContainerConfig
	16, // 40: scheduler.v1.SchedulerService.CreateEnvironment:input_type -> scheduler.v1.CreateEnvironmentRequest
	18, // 41: scheduler.v1.SchedulerService.GetEnvironment:input_type -> scheduler.v1.GetEnvironmentRequest
	20, // 42: scheduler.v1.SchedulerService.UpdateEnvironment:input_type -> scheduler.v1.UpdateEnvironmentRequest
	22, // 43: scheduler.v1.SchedulerService.DeleteEnvironment:input_type -> scheduler.v1.DeleteEnvironmentRequest
	24, // 44: scheduler.v1.SchedulerService.ListEnvironments:input_type -> scheduler.v1.ListEnvironmentsRequest
	26, // 45: scheduler.v1.SchedulerService.StartEnvironment:input_type -> scheduler.v1.StartEnvironmentRequest
	28, // 46: scheduler.v1.SchedulerService.StopEnvironment:input_type -> scheduler.v1.StopEnvironmentRequest
	30, // 47: scheduler.v1.SchedulerService.RestartEnvironment:input_type -> scheduler.v1.RestartEnvironmentRequest
	32, // 48: scheduler.v1.SchedulerService.GetEnvironmentStatus:input_type -> scheduler.v1.GetEnvironmentStatusRequest
	35, // 49: scheduler.v1.SchedulerService.GetEnvironmentLogs:input_type -> scheduler.v1.GetEnvironmentLogsRequest
	17, // 50: scheduler.v1.SchedulerService.CreateEnvironment:output_type -> scheduler.v1.CreateEnvironmentResponse
	19, // 51: scheduler.v1.SchedulerService.GetEnvironment:output_type -> scheduler.v1.GetEnvironmentResponse
	21, // 52: scheduler.v1.SchedulerService.UpdateEnvironment:output_type -> scheduler.v1.UpdateEnvironmentResponse
	23, // 53: scheduler.v1.SchedulerService.DeleteEnvironment:output_type -> scheduler.v1.DeleteEnvironmentResponse
	25, // 54: scheduler.v1.SchedulerService.ListEnvironments:output_type -> scheduler.v1.ListEnvironmentsResponse
	27, // 55: scheduler.v1.SchedulerService.StartEnvironment:output_type -> scheduler.v1.StartEnvironmentResponse
	29, // 56: scheduler.v1.SchedulerService.StopEnvironment:output_type -> scheduler.v1.StopEnvironmentResponse
	31, // 57: scheduler.v1.SchedulerService.RestartEnvironment:output_type -> scheduler.v1.RestartEnvironmentResponse
	33, // 58: scheduler.v1.SchedulerService.GetEnvironmentStatus:output_type -> scheduler.v1.GetEnvironmentStatusResponse
	36, // 59: scheduler.v1.SchedulerService.GetEnvironmentLogs:output_type -> scheduler.v1.GetEnvironmentLogsResponse
	50, // [50:60] is the sub-list for method output_type
	40, // [40:50] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_scheduler_proto_init() }
func file_scheduler_proto_init() {
	if File_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scheduler_proto_rawDesc), len(file_scheduler_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scheduler_proto_goTypes,
		DependencyIndexes: file_scheduler_proto_depIdxs,
		EnumInfos:         file_scheduler_proto_enumTypes,
		MessageInfos:      file_scheduler_proto_msgTypes,
	}.Build()
	File_scheduler_proto = out.File
	file_scheduler_proto_goTypes = nil
	file_scheduler_proto_depIdxs = nil
}
